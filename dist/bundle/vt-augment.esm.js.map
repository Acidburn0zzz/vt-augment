{"version":3,"file":"vt-augment.esm.js","sources":["../../src/vt-augment.ts","../../src/index.umd.ts"],"sourcesContent":["import conf from \"./config\"\n\nexport type VTAugmentOptions = {\n  [key: string]: any\n}\n\nconst CSS_SCOPE = '4rrgf4';\n\nconst COMMON_CSS = `\n  @keyframes spin-${CSS_SCOPE} {\n    to { transform: rotate(360deg); }\n  }\n  .spinner-${CSS_SCOPE} {\n    border: 8px solid rgba(0, 0, 0, 0.2);\n    border-left-color: white;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin-${CSS_SCOPE} 1.2s linear infinite;\n  };\n`;\n\nconst DRAWER_MODE_STYLESHEET = `\n  ${COMMON_CSS}\n  .vt-augment-drawer-${CSS_SCOPE} {\n    width: 700px;\n    background: #313d5a;\n    border: 1px solid #e6e6e6;\n    text-align: left;\n    z-index: 102;\n    position: fixed;\n    right: 0;\n    top: 0;\n    height: 100vh;\n    box-shadow: -4px 5px 8px -3px rgba(17, 17, 17, .16);\n    animation: slideToRight-${CSS_SCOPE} 0.5s 1 forwards;\n    transform: translateX(100vw);\n  }\n  .vt-augment-drawer-${CSS_SCOPE}[opened] {\n    display: block;\n    animation: slideFromRight-${CSS_SCOPE} 0.2s 1 forwards;\n  }\n  @keyframes slideFromRight-${CSS_SCOPE} {\n    0% {\n      transform: translateX(100vw);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  }\n  @keyframes slideToRight-${CSS_SCOPE} {\n    100% {\n      transform: translateX(100vw);\n      display: none;\n    }\n  }\n`\n\nconst EMBEDDED_MODE_STYLESHEET = ``; // TODO\n\nexport class VTAugment {\n\n    protected constructor(\n      public _container: HTMLElement,\n      public _options: VTAugmentOptions) {\n        console.log('VT AUGMENT', 'constructor', _container, _options);\n        createStyleSheet(true);\n      }\n\n    static factory(container: HTMLElement = null, options: VTAugmentOptions = {}) { return new VTAugment(container, options) }\n\n    /**\n     * Sets the default options.\n     *\n     * @param options options dict\n     */\n    defaults(options: VTAugmentOptions) {\n      conf.defaults = options\n      return this\n    }\n\n    url(url: string) {\n      this.loading(true);\n      const _iframe = getIframe(this._container);\n\n      _iframe.onload = () => {\n        this.loading(false);\n      };\n\n      _iframe.src = url;\n      return this;\n    }\n\n    openDrawer() {\n      this._container.setAttribute('opened', '');\n    }\n\n    closeDrawer() {\n      this._container.removeAttribute('opened');\n    }\n\n    listen() {\n      // TODO\n    }\n\n    loading(active: boolean) {\n      const _spinner = getSpinner(this._container);\n      _spinner.style.display = active ? 'block' : 'none';\n    }\n}\n\nfunction createStyleSheet(drawerMode: boolean) {\n  const _stylesheet = document.createElement('style');\n  _stylesheet.innerHTML = drawerMode ? DRAWER_MODE_STYLESHEET : EMBEDDED_MODE_STYLESHEET;\n  document.body.appendChild(_stylesheet);\n}\n\nfunction getIframe(container: HTMLElement) {\n  let _iframe: HTMLIFrameElement = container.querySelector('iframe');\n\n  if (!_iframe) {\n    _iframe = document.createElement('iframe');\n    _iframe.style.width = '100%';\n    _iframe.style.height = '100%';\n    _iframe.setAttribute('frameborder', '0');\n    this._container.appendChild(_iframe);\n  }\n\n  return _iframe;\n}\n\nfunction getSpinner(container: HTMLElement) {\n  let _spinner: HTMLDivElement = container.querySelector('div.spinner');\n\n  if (!_spinner) {\n    _spinner = document.createElement('div');\n    _spinner.classList.add(`spinner-${CSS_SCOPE}`);\n    this._container.appendChild(_spinner);\n  }\n\n  return _spinner;\n}\n","import { VTAugment } from \"./vt-augment\"\n\nconst factory = VTAugment.factory\nfactory[\"default\"] = VTAugment.factory\n\n/**\n * Return VTAugment instance.\n */\nexport default factory\n"],"names":["_container","_options","drawerMode","_stylesheet","this","console","log","document","createElement","innerHTML","body","appendChild","VTAugment","container","options","url","loading","_iframe","querySelector","style","width","height","setAttribute","getIframe","onload","_this","src","removeAttribute","active","_spinner","classList","add","getSpinner","display","factory"],"mappings":"AAMA,iBAwDI,WACSA,EACAC,GA+Cb,IAA0BC,EAClBC,EAjDKC,gBAAAJ,EACAI,cAAAH,EACLI,QAAQC,IAAI,aAAc,cAAeN,EAAYC,GA8CnCC,GA7CD,GA8CjBC,EAAcI,SAASC,cAAc,UAC/BC,UAAYP,EA3FK,+hCAoCE,GAwD/BK,SAASG,KAAKC,YAAYR,GAL5B,OAxCWS,UAAP,SAAeC,EAA+BC,GAAkC,oBAAjED,qBAA+BC,MAAyC,IAAIF,EAAUC,EAAWC,IAOhHF,qBAAA,SAASE,GAEP,OAAOV,MAGTQ,gBAAA,SAAIG,GAAJ,WACEX,KAAKY,SAAQ,GACb,IAAMC,EAkCZ,SAAmBJ,GACjB,IAAII,EAA6BJ,EAAUK,cAAc,UAEpDD,KACHA,EAAUV,SAASC,cAAc,WACzBW,MAAMC,MAAQ,OACtBH,EAAQE,MAAME,OAAS,OACvBJ,EAAQK,aAAa,cAAe,KACpClB,KAAKJ,WAAWW,YAAYM,IAG9B,OAAOA,EA7CaM,CAAUnB,KAAKJ,YAO/B,OALAiB,EAAQO,OAAS,WACfC,EAAKT,SAAQ,IAGfC,EAAQS,IAAMX,EACPX,MAGTQ,uBAAA,WACER,KAAKJ,WAAWsB,aAAa,SAAU,KAGzCV,wBAAA,WACER,KAAKJ,WAAW2B,gBAAgB,WAGlCf,mBAAA,aAIAA,oBAAA,SAAQgB,IA0BZ,SAAoBf,GAClB,IAAIgB,EAA2BhB,EAAUK,cAAc,eAElDW,KACHA,EAAWtB,SAASC,cAAc,QACzBsB,UAAUC,IAAI,kBACvB3B,KAAKJ,WAAWW,YAAYkB,IAG9B,OAAOA,GAlCcG,CAAW5B,KAAKJ,YACxBmB,MAAMc,QAAUL,EAAS,QAAU,iBCzG5CM,EAAUtB,EAAUsB,QAC1BA,EAAiB,QAAItB,EAAUsB"}