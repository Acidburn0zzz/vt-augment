{"version":3,"file":"vt-augment.esm.js","sources":["../../src/vt-augment.ts","../../src/index.umd.ts"],"sourcesContent":["export type VTAugmentOptions = {\n  mode?: string,\n}\n\nconst CSS_SCOPE = '4rrgf4';\n\nconst CSS_STYLESHEET = `\n  .vt-augment-${CSS_SCOPE} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .vt-augment-${CSS_SCOPE}.drawer {\n    width: 700px;\n    background: #313d5a;\n    border: 1px solid #e6e6e6;\n    text-align: left;\n    z-index: 102;\n    position: fixed;\n    right: 0;\n    top: 0;\n    height: 100vh;\n    box-shadow: -4px 5px 8px -3px rgba(17, 17, 17, .16);\n    animation: slideToRight-${CSS_SCOPE} 0.5s 1 forwards;\n    transform: translateX(100vw);\n  }\n  .vt-augment-${CSS_SCOPE}.drawer[opened] {\n    display: block;\n    animation: slideFromRight-${CSS_SCOPE} 0.2s 1 forwards;\n  }\n  .vt-augment-${CSS_SCOPE} > .spinner {\n    border: 8px solid rgba(0, 0, 0, 0.2);\n    border-left-color: white;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin-${CSS_SCOPE} 1.2s linear infinite;\n  }\n  @keyframes spin-${CSS_SCOPE} {\n    to { transform: rotate(360deg); }\n  }\n  @keyframes slideFromRight-${CSS_SCOPE} {\n    0% {\n      transform: translateX(100vw);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  }\n  @keyframes slideToRight-${CSS_SCOPE} {\n    100% {\n      transform: translateX(100vw);\n      display: none;\n    }\n  }\n`\n\nexport class VTAugment {\n\n    protected constructor(\n      public _container: HTMLElement,\n      public _options: VTAugmentOptions) {\n        createStyleSheet();\n        getIframe(_container);\n\n        _container.classList.add(`vt-augment-${CSS_SCOPE}`);\n        if (_options.mode === 'drawer') {\n          _container.classList.add('drawer');\n        }\n      }\n\n    static factory(container: HTMLElement = null, options: VTAugmentOptions = {}) { return new VTAugment(container, options) }\n\n    url(url: string) {\n      this.loading(true);\n      const _iframe = getIframe(this._container);\n\n      _iframe.onload = () => {\n        this.loading(false);\n      };\n\n      _iframe.src = url;\n      return this;\n    }\n\n    openDrawer() {\n      this._container.setAttribute('opened', '');\n      return this;\n    }\n\n    closeDrawer() {\n      this._container.removeAttribute('opened');\n      return this;\n    }\n\n    listen() {\n      console.error('listen: Not implemented yet');\n      return this;\n    }\n\n    loading(active: boolean) {\n      const _spinner = getSpinner(this._container);\n      const _iframe = getIframe(this._container);\n      _spinner.style.display = active ? 'block' : 'none';\n      _iframe.style.display = active ? 'none' : 'block';\n      return this;\n    }\n}\n\nfunction createStyleSheet() {\n  const _stylesheet = document.createElement('style');\n  _stylesheet.innerHTML = CSS_STYLESHEET;\n  document.body.appendChild(_stylesheet);\n}\n\nfunction getIframe(container: HTMLElement) {\n  let _iframe: HTMLIFrameElement = container.querySelector('iframe');\n\n  if (!_iframe) {\n    _iframe = document.createElement('iframe');\n    _iframe.style.width = '100%';\n    _iframe.style.height = '100%';\n    _iframe.setAttribute('frameborder', '0');\n    container.appendChild(_iframe);\n  }\n\n  return _iframe;\n}\n\nfunction getSpinner(container: HTMLElement) {\n  let _spinner: HTMLElement = container.querySelector('div.spinner');\n\n  if (!_spinner) {\n    _spinner = document.createElement('div');\n    _spinner.classList.add('spinner');\n    container.appendChild(_spinner);\n  }\n\n  return _spinner;\n}\n","import { VTAugment } from \"./vt-augment\"\n\nconst factory = VTAugment.factory\nfactory[\"default\"] = VTAugment.factory\n\n/**\n * Return VTAugment instance.\n */\nexport default factory\n"],"names":["_container","_options","_stylesheet","this","document","createElement","innerHTML","body","appendChild","getIframe","classList","add","mode","VTAugment","container","options","url","loading","_iframe","onload","_this","src","setAttribute","removeAttribute","console","error","active","_spinner","querySelector","getSpinner","style","display","width","height","factory"],"mappings":"AAIA,iBAuDI,WACSA,EACAC,GAgDb,IACQC,EAlDKC,gBAAAH,EACAG,cAAAF,GAiDLC,EAAcE,SAASC,cAAc,UAC/BC,UAzGS,+oCA0GrBF,SAASG,KAAKC,YAAYN,GAjDpBO,EAAUT,GAEVA,EAAWU,UAAUC,IAAI,qBACH,WAAlBV,EAASW,MACXZ,EAAWU,UAAUC,IAAI,UAwCnC,OApCWE,UAAP,SAAeC,EAA+BC,GAAkC,oBAAjED,qBAA+BC,MAAyC,IAAIF,EAAUC,EAAWC,IAEhHF,gBAAA,SAAIG,GAAJ,WACEb,KAAKc,SAAQ,GACb,IAAMC,EAAUT,EAAUN,KAAKH,YAO/B,OALAkB,EAAQC,OAAS,WACfC,EAAKH,SAAQ,IAGfC,EAAQG,IAAML,EACPb,MAGTU,uBAAA,WAEE,OADAV,KAAKH,WAAWsB,aAAa,SAAU,IAChCnB,MAGTU,wBAAA,WAEE,OADAV,KAAKH,WAAWuB,gBAAgB,UACzBpB,MAGTU,mBAAA,WAEE,OADAW,QAAQC,MAAM,+BACPtB,MAGTU,oBAAA,SAAQa,GACN,IAAMC,EA4BZ,SAAoBb,GAClB,IAAIa,EAAwBb,EAAUc,cAAc,eAE/CD,KACHA,EAAWvB,SAASC,cAAc,QACzBK,UAAUC,IAAI,WACvBG,EAAUN,YAAYmB,IAGxB,OAAOA,EArCcE,CAAW1B,KAAKH,YAC3BkB,EAAUT,EAAUN,KAAKH,YAG/B,OAFA2B,EAASG,MAAMC,QAAUL,EAAS,QAAU,OAC5CR,EAAQY,MAAMC,QAAUL,EAAS,OAAS,QACnCvB,WAUb,SAASM,EAAUK,GACjB,IAAII,EAA6BJ,EAAUc,cAAc,UAUzD,OARKV,KACHA,EAAUd,SAASC,cAAc,WACzByB,MAAME,MAAQ,OACtBd,EAAQY,MAAMG,OAAS,OACvBf,EAAQI,aAAa,cAAe,KACpCR,EAAUN,YAAYU,IAGjBA,MC5HHgB,EAAUrB,EAAUqB,QAC1BA,EAAiB,QAAIrB,EAAUqB"}